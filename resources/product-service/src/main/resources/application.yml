server:
  port: 8081

authService:
  baseUrl: http://localhost:8080

spring:
  webflux:
    base-path: /api/v1/products
  datasource:
    url: jdbc:postgresql://localhost:5432/eshop_products
    driver-class-name: org.postgresql.Driver
    username: products
    password: products
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL95Dialect
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
  security:
    oauth2:
      client:
        registration:
          eshop-products-oidc:
            provider: spring
            client-id: eshop-products
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "http://127.0.0.1:8081/login/oauth2/code/eshop-products-oidc"
            scope: openid
            client-name: eshop-products-oidc
        provider:
          spring:
            issuer-uri: ${authService.baseUrl}
  rabbitmq:
    host: localhost
    port: 5672
    username: user
    password: bitnami
  redis:
    host: localhost
    port: 6379

log4jdbc:
  drivers: ${spring.datasource.driver-class-name}
  auto:
    load:
      popular:
        drivers: false

logging:
  level:
    jdbc:
      sqltiming: INFO
      resultsettable: DEBUG
      sqlonly: ERROR
      audit: ERROR
      resultset: ERROR

#logging:
#  level:
#    root: debug
#    org.springframework.web: debug
#    org.springframework.security: debug
#    org.springframework.security.oauth2: debug
